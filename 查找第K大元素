牛客网：https://www.nowcoder.com/practice/673454422d1b4a168aed31e449d87c00?tpId=98&tqId=32887&tPage=4&rp=8&ru=%2Fta%2F2019test&qru=%2Fta%2F2019test%2Fquestion-ranking
题目描述：
给定一个无序的整型数组A[n],数组大小大于等于3,允许有值相同的元素;请设计算法找到该数组排序后第三大的元素值并输出.
输入描述：一个非空的整数数组(至少有3个元素,可正可负)
输出描述:第三大的元素值
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;
//要先转化为数组
public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String ss="";
        ss=sc.nextLine();
        ss=ss.substring(1,ss.length()-1);//去除括号
        String[] temp=ss.split(",");
        int[] arr=new int[temp.length];
        int i=0;
        for(String temp1:temp) {
        	   arr[i] = Integer.parseInt(temp1);
        	   i++;
        }
        Arrays.sort(arr);//由于jdk关系，不能直接使用 Arrays.sort(arr,Collections.reverseOrder());
        int max=arr[temp.length-1];//不能用分割以前的字符串的长度，否则两位数，就会有指针错误
        int indicate=1,j=temp.length-1;//第一个数除外，因为做右边的数字肯定是第一大的，所以indicate=1。
        while(indicate<3) {
        		if(arr[j]<max) {  //在我的算法中，如果两个数相等，则要再看一个数，因为是找第三大的数字，如果1，2，2，3，3。则是1.
        			max=arr[j];
        			j--;
        			indicate++;
        		}
        		else j--;
        	  }
        System.out.println(max);
        }
    
}
